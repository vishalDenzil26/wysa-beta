/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    resources: Resource;
    news: News;
    videos: Video;
    reports: Report;
    media: Media;
    categories: Category;
    users: User;
    resourcesListing: ResourcesListing;
    blogCategories: BlogCategory;
    blog: Blog;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    resources: ResourcesSelect<false> | ResourcesSelect<true>;
    news: NewsSelect<false> | NewsSelect<true>;
    videos: VideosSelect<false> | VideosSelect<true>;
    reports: ReportsSelect<false> | ReportsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    resourcesListing: ResourcesListingSelect<false> | ResourcesListingSelect<true>;
    blogCategories: BlogCategoriesSelect<false> | BlogCategoriesSelect<true>;
    blog: BlogSelect<false> | BlogSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
    blogNav: BlogNav;
    globalscriptsandcss: Globalscriptsandcss;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    blogNav: BlogNavSelect<false> | BlogNavSelect<true>;
    globalscriptsandcss: GlobalscriptsandcssSelect<false> | GlobalscriptsandcssSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    variant: 'none' | 'primary';
    height: 'min-h-[80vh]' | 'min-h-screen';
    title?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    description?: string | null;
    descriptionColor?: ('text-white' | 'text-foreground') | null;
    breadcrumbColor?: ('text-white' | 'text-primary' | 'text-secondary') | null;
    media: string | Media;
    link?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'resources';
            value: string | Resource;
          } | null);
      url?: string | null;
      label?: string | null;
      /**
       * Choose how the link should be rendered.
       */
      appearance?: ('primary' | 'secondary' | 'primary-ghost' | 'secondary-ghost') | null;
    };
  };
  layout: (
    | CallToActionBlock
    | MediaBlock
    | InteractiveChatBlock
    | FormBlock
    | DynamicGridBlock
    | FeedbackBlock
    | OnlyTextBlock
    | DynamicContentBlock
    | FAQBlock
    | EditorBlock
    | EmbedBlock
    | {
        categoriesFilters?:
          | {
              Category?: (string | null) | Category;
              displayName?: string | null;
              navigationType?: ('page' | 'param') | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'categoryTabsBlock';
      }
    | VideoBlock
    | ImageSliderBlock
    | FeaturedBlogBlock
    | BlogListingBlock
  )[];
  latestArticle?: {
    showLatestArticle?: ('yes' | 'no') | null;
    latestArticleOptions?: {
      backgroundColor?: ('none' | 'primary' | 'secondary' | 'muted') | null;
      thumbnailOrientation?: ('square' | 'portrait') | null;
      verticalPadding?: ('pt-5 md:pt-20' | 'pb-5 md:pb-20' | 'py-5 md:py-20' | 'py-0') | null;
    };
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Page;
  /**
   * Enter full <style> tag with custom CSS to apply page level.
   */
  customCSS?: string | null;
  /**
   * Enter <script> tags to be injected into the page
   */
  customScripts?: string | null;
  breadcrumbs?:
    | {
        doc?: (string | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resources".
 */
export interface Resource {
  id: string;
  title: string;
  hero: {
    variant: 'none' | 'primary';
    height: 'min-h-[80vh]' | 'min-h-screen';
    title?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    description?: string | null;
    descriptionColor?: ('text-white' | 'text-foreground') | null;
    breadcrumbColor?: ('text-white' | 'text-primary' | 'text-secondary') | null;
    media: string | Media;
    link?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'resources';
            value: string | Resource;
          } | null);
      url?: string | null;
      label?: string | null;
      /**
       * Choose how the link should be rendered.
       */
      appearance?: ('primary' | 'secondary' | 'primary-ghost' | 'secondary-ghost') | null;
    };
  };
  showLatestArticle?: ('yes' | 'no') | null;
  latestArticleOptions?: {
    backgroundColor?: ('none' | 'primary' | 'secondary' | 'muted') | null;
    thumbnailOrientation?: ('square' | 'portrait') | null;
    verticalPadding?: ('pt-5 md:pt-20' | 'pb-5 md:pb-20' | 'py-5 md:py-20' | 'py-0') | null;
  };
  listingLabel: string;
  listingByPage?:
    | {
        resourceCollectionType: 'news' | 'reports' | 'videos';
        id?: string | null;
      }[]
    | null;
  listingByCategory?:
    | {
        Category: string | Category;
        id?: string | null;
      }[]
    | null;
  showViewAll?: ('yes' | 'no') | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Resource;
  breadcrumbs?:
    | {
        doc?: (string | null) | Resource;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  backgroundColor?: ('bg-primary-foreground' | 'bg-secondary-foreground' | 'bg-none') | null;
  backgroundImage?: (string | null) | Media;
  mobileBackgroundImage?: (string | null) | Media;
  rounded?: ('rounded-2xl' | 'none') | null;
  width?: ('default' | 'w-full') | null;
  height?: ('h-full' | 'h-screen') | null;
  alignContent?: ('center' | 'left' | 'right') | null;
  justifyContent?: ('justify-center' | 'justify-start' | 'justify-end' | 'justify-between' | 'justify-around') | null;
  contentWidth?: ('w-full' | 'w-1/2' | 'w-2/5' | 'w-3/4') | null;
  /**
   * Use space to separate class names
   */
  customClassNames?: string | null;
  title?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  description?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  imageGroup?:
    | {
        image: string | Media;
        label: string;
        id?: string | null;
      }[]
    | null;
  links?:
    | {
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'resources';
                value: string | Resource;
              } | null);
          url?: string | null;
          label?: string | null;
          /**
           * Choose how the link should be rendered.
           */
          appearance?:
            | (
                | 'primary'
                | 'secondary'
                | 'primary-ghost'
                | 'secondary-ghost'
                | 'primary-ghost-with-arrow'
                | 'secondary-ghost-with-arrow'
                | 'primary-only-arrow'
                | 'secondary-only-arrow'
              )
            | null;
        };
        id?: string | null;
      }[]
    | null;
  verticalPadding?: ('pt-5 md:pt-14' | 'pb-5 md:pb-14' | 'py-5 md:py-14' | 'py-0') | null;
  verticalGutter?: ('mt-5 md:mt-20' | 'mb-5 md:mb-20' | 'my-5 md:my-20' | 'my-0') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  position?: ('default' | 'fullscreen') | null;
  rounded?: ('none' | 'rounded-2xl') | null;
  media: string | Media;
  mobileMedia?: (string | null) | Media;
  customImageClassName?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InteractiveChatBlock".
 */
export interface InteractiveChatBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'interactiveChatBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  colorVariant: 'primary' | 'secondary';
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  enablePrivacyPolicyAgreement?: boolean | null;
  beforePrivacyPolicyLink?: string | null;
  privacyPolicyURL?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            placeholder?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'tel';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            placeholder?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'customDatePicker';
          }
        | {
            name: string;
            label?: string | null;
            consentURL?: {
              link?: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'resources';
                      value: string | Resource;
                    } | null);
                url?: string | null;
                label?: string | null;
                /**
                 * Choose how the link should be rendered.
                 */
                appearance?: ('primary' | 'secondary' | 'primary-ghost' | 'secondary-ghost') | null;
              };
            };
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'customConsent';
          }
        | {
            name: string;
            label?: string | null;
            checkboxes: {
              name: string;
              label?: string | null;
              id?: string | null;
            }[];
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'customMultiCheckboxes';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DynamicGridBlock".
 */
export interface DynamicGridBlock {
  gridLayout?: {
    columns?: number | null;
    rows?: number | null;
    columnsGap?:
      | (
          | 'gap-x-0'
          | 'gap-x-2'
          | 'gap-x-4'
          | 'gap-x-6'
          | 'gap-x-10'
          | 'gap-x-12'
          | 'gap-x-14'
          | 'gap-x-16'
          | 'gap-x-20'
          | 'gap-x-24'
        )
      | null;
    rowsGap?:
      | (
          | 'gap-y-0'
          | 'gap-y-2'
          | 'gap-y-4'
          | 'gap-y-6'
          | 'gap-y-10'
          | 'gap-y-12'
          | 'gap-y-14'
          | 'gap-y-16'
          | 'gap-y-20'
          | 'gap-y-24'
        )
      | null;
    'grid-padding-y'?: ('py-0' | 'py-6' | 'py-10' | 'py-12' | 'py-14' | 'py-16' | 'py-20' | 'py-24') | null;
    'grid-padding-x'?: ('px-0' | 'px-6' | 'px-10' | 'px-12' | 'px-14' | 'px-16' | 'px-20' | 'px-24') | null;
    alignItems?: ('' | 'items-start' | 'items-center' | 'items-end') | null;
    justifyContent?: ('' | 'justify-between' | 'justify-around' | 'justify-center' | 'justify-evenly') | null;
    background?: ('bg-primary-foreground' | 'bg-secondary-foreground' | 'bg-muted' | 'bg-none') | null;
    position?: ('default' | 'expand') | null;
    rounded?: ('rounded-2xl' | 'none') | null;
    /**
     * Use space to separate class names
     */
    customClassNames?: string | null;
    verticalGutter?: ('mt-5 md:mt-20' | 'mb-5 md:mb-20' | 'my-5 md:my-20' | 'my-0') | null;
  };
  gridItems?:
    | {
        gridItemGroup?: {
          gridItemBlock?:
            | (MediaBlock | CallToActionBlock | DynamicContentBlock | FeedbackBlock | RatingBlock | VideoBlock)[]
            | null;
          /**
           * Use space to separate class names
           */
          customClassNames?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'dynamicGridBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DynamicContentBlock".
 */
export interface DynamicContentBlock {
  backgroundColor?: ('bg-primary-foreground' | 'bg-secondary-foreground' | 'bg-none') | null;
  backgroundImage?: (string | null) | Media;
  mobileBackgroundImage?: (string | null) | Media;
  rounded?: ('rounded-2xl' | 'none') | null;
  width?: ('default' | 'w-full') | null;
  height?: ('h-full' | 'h-screen') | null;
  alignContent?: ('center' | 'left' | 'right') | null;
  contentWidth?: ('w-full' | 'w-1/2' | 'w-2/5' | 'w-3/4') | null;
  title?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  description?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  imageGroup?:
    | {
        image: string | Media;
        label: string;
        id?: string | null;
      }[]
    | null;
  verticalPadding?: ('pt-5 md:pt-14' | 'pb-5 md:pb-14' | 'py-5 md:py-14' | 'py-0') | null;
  verticalGutter?: ('mt-5 md:mt-20' | 'mb-5 md:mb-20' | 'my-5 md:my-20' | 'my-0') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'dynamicContentBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeedbackBlock".
 */
export interface FeedbackBlock {
  backgroundColor: 'bg-primary-foreground' | 'bg-secondary-foreground';
  title: string;
  subText: string;
  feedBackContent?:
    | {
        consumerType: string;
        origin: string;
        quote?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'feedBackBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Rating block".
 */
export interface RatingBlock {
  rateCount: number;
  feedback: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  source: string;
  link?: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'resources';
          value: string | Resource;
        } | null);
    url?: string | null;
    label?: string | null;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('secondary-ghost-with-arrow' | 'secondary-only-arrow') | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'ratingBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Video Block".
 */
export interface VideoBlock {
  title: string;
  thumbNail: string | Media;
  mobileThumbNail?: (string | null) | Media;
  /**
   * Only MP4 supported.
   */
  sourceFile: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'videoBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OnlyTextBlock".
 */
export interface OnlyTextBlock {
  width?: ('w-1/3' | 'w-1/2' | 'w-2/5' | 'w-2/3' | 'w-full') | null;
  richText?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  enableLink?: boolean | null;
  verticalGutter?: ('mt-5 md:mt-20' | 'mb-5 md:mb-20' | 'my-5 md:my-20' | 'my-0') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'onlyTextBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock".
 */
export interface FAQBlock {
  faqsContent?: {
    faqItems?:
      | {
          question: string;
          answer?: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          category: string | Category;
          id?: string | null;
        }[]
      | null;
  };
  faqsFilter?: {
    faqCategories?:
      | {
          Category: string | Category;
          displayName?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EditorBlock".
 */
export interface EditorBlock {
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  enableLink?: boolean | null;
  verticalGutter?: ('mt-5 md:mt-20' | 'mb-5 md:mb-20' | 'my-5 md:my-20' | 'my-0') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'editorBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Embed Block".
 */
export interface EmbedBlock {
  sourceURL: string;
  /**
   * Only pixel value
   */
  width?: number | null;
  /**
   * Only pixel value
   */
  height?: number | null;
  colorVariant: 'primary' | 'secondary';
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'embedBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageSliderBlock".
 */
export interface ImageSliderBlock {
  sliderImages?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageSliderBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedBlogBlock".
 */
export interface FeaturedBlogBlock {
  title?: string | null;
  FeaturedBlogOptions?: {
    backgroundColor?: ('none' | 'primary' | 'secondary' | 'muted') | null;
    thumbnailOrientation?: ('square' | 'portrait') | null;
    verticalPadding?: ('pt-5 md:pt-20' | 'pb-5 md:pb-20' | 'py-5 md:py-20' | 'py-0') | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'featuredBlogBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogListingBlock".
 */
export interface BlogListingBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'blogListingBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news".
 */
export interface News {
  id: string;
  title: string;
  thumbNail: string | Media;
  bannerImage: string | Media;
  breadcrumbColor?: ('text-white' | 'text-primary' | 'text-secondary') | null;
  /**
   * In minutes
   */
  duration: number;
  abstract?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedArticles?:
    | {
        relatedArticle?: (string | null) | News;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  category: string | Category;
  author: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Resource;
  breadcrumbs?:
    | {
        doc?: (string | null) | News;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos".
 */
export interface Video {
  id: string;
  title: string;
  thumbNail: string | Media;
  /**
   * In minutes
   */
  duration: number;
  sourceFile: string | Media;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Page;
  breadcrumbs?:
    | {
        doc?: (string | null) | Video;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reports".
 */
export interface Report {
  id: string;
  title: string;
  thumbNail: string | Media;
  bannerImage: string | Media;
  breadcrumbColor?: ('text-white' | 'text-primary' | 'text-secondary') | null;
  /**
   * In minutes
   */
  duration: number;
  abstract?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedArticles?:
    | {
        relatedArticle?: (string | null) | News;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  category: string | Category;
  author: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Resource;
  breadcrumbs?:
    | {
        doc?: (string | null) | Report;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  roles?: ('admin' | 'editor' | 'author' | 'contributor' | 'viewer')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resourcesListing".
 */
export interface ResourcesListing {
  id: string;
  articleId: string;
  articleCollectionSlug: string;
  article:
    | {
        relationTo: 'news';
        value: string | News;
      }
    | {
        relationTo: 'reports';
        value: string | Report;
      }
    | {
        relationTo: 'videos';
        value: string | Video;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogCategories".
 */
export interface BlogCategory {
  id: string;
  title: string;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  publisher?: (string | null) | User;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Resource;
  /**
   * Enter full <style> tag with custom CSS to apply page level.
   */
  customCSS?: string | null;
  /**
   * Enter <script> tags to be injected into the page
   */
  customScripts?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog".
 */
export interface Blog {
  id: string;
  title: string;
  thumbNail: string | Media;
  bannerImage: string | Media;
  breadcrumbColor?: ('text-white' | 'text-primary' | 'text-secondary') | null;
  /**
   * In minutes
   */
  duration: number;
  abstract?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedArticles?:
    | {
        relatedArticle?: (string | null) | Blog;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  category: (string | BlogCategory)[];
  author: string;
  publisher?: (string | null) | User;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Resource;
  /**
   * Enter full <style> tag with custom CSS to apply page level.
   */
  customCSS?: string | null;
  /**
   * Enter <script> tags to be injected into the page
   */
  customScripts?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'resources';
          value: string | Resource;
        } | null)
      | ({
          relationTo: 'news';
          value: string | News;
        } | null)
      | ({
          relationTo: 'videos';
          value: string | Video;
        } | null)
      | ({
          relationTo: 'reports';
          value: string | Report;
        } | null)
      | ({
          relationTo: 'blog';
          value: string | Blog;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'resources';
        value: string | Resource;
      } | null)
    | ({
        relationTo: 'news';
        value: string | News;
      } | null)
    | ({
        relationTo: 'videos';
        value: string | Video;
      } | null)
    | ({
        relationTo: 'reports';
        value: string | Report;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'resourcesListing';
        value: string | ResourcesListing;
      } | null)
    | ({
        relationTo: 'blogCategories';
        value: string | BlogCategory;
      } | null)
    | ({
        relationTo: 'blog';
        value: string | Blog;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        variant?: T;
        height?: T;
        title?: T;
        description?: T;
        descriptionColor?: T;
        breadcrumbColor?: T;
        media?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        interactiveChatBlock?: T | InteractiveChatBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        dynamicGridBlock?: T | DynamicGridBlockSelect<T>;
        feedBackBlock?: T | FeedbackBlockSelect<T>;
        onlyTextBlock?: T | OnlyTextBlockSelect<T>;
        dynamicContentBlock?: T | DynamicContentBlockSelect<T>;
        faqBlock?: T | FAQBlockSelect<T>;
        editorBlock?: T | EditorBlockSelect<T>;
        embedBlock?: T | EmbedBlockSelect<T>;
        categoryTabsBlock?:
          | T
          | {
              categoriesFilters?:
                | T
                | {
                    Category?: T;
                    displayName?: T;
                    navigationType?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        videoBlock?: T | VideoBlockSelect<T>;
        imageSliderBlock?: T | ImageSliderBlockSelect<T>;
        featuredBlogBlock?: T | FeaturedBlogBlockSelect<T>;
        blogListingBlock?: T | BlogListingBlockSelect<T>;
      };
  latestArticle?:
    | T
    | {
        showLatestArticle?: T;
        latestArticleOptions?:
          | T
          | {
              backgroundColor?: T;
              thumbnailOrientation?: T;
              verticalPadding?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  customCSS?: T;
  customScripts?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  backgroundColor?: T;
  backgroundImage?: T;
  mobileBackgroundImage?: T;
  rounded?: T;
  width?: T;
  height?: T;
  alignContent?: T;
  justifyContent?: T;
  contentWidth?: T;
  customClassNames?: T;
  title?: T;
  description?: T;
  imageGroup?:
    | T
    | {
        image?: T;
        label?: T;
        id?: T;
      };
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  verticalPadding?: T;
  verticalGutter?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  position?: T;
  rounded?: T;
  media?: T;
  mobileMedia?: T;
  customImageClassName?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InteractiveChatBlock_select".
 */
export interface InteractiveChatBlockSelect<T extends boolean = true> {
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  colorVariant?: T;
  introContent?: T;
  enablePrivacyPolicyAgreement?: T;
  beforePrivacyPolicyLink?: T;
  privacyPolicyURL?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DynamicGridBlock_select".
 */
export interface DynamicGridBlockSelect<T extends boolean = true> {
  gridLayout?:
    | T
    | {
        columns?: T;
        rows?: T;
        columnsGap?: T;
        rowsGap?: T;
        'grid-padding-y'?: T;
        'grid-padding-x'?: T;
        alignItems?: T;
        justifyContent?: T;
        background?: T;
        position?: T;
        rounded?: T;
        customClassNames?: T;
        verticalGutter?: T;
      };
  gridItems?:
    | T
    | {
        gridItemGroup?:
          | T
          | {
              gridItemBlock?:
                | T
                | {
                    mediaBlock?: T | MediaBlockSelect<T>;
                    cta?: T | CallToActionBlockSelect<T>;
                    dynamicContentBlock?: T | DynamicContentBlockSelect<T>;
                    feedBackBlock?: T | FeedbackBlockSelect<T>;
                    ratingBlock?: T | RatingBlockSelect<T>;
                    videoBlock?: T | VideoBlockSelect<T>;
                  };
              customClassNames?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DynamicContentBlock_select".
 */
export interface DynamicContentBlockSelect<T extends boolean = true> {
  backgroundColor?: T;
  backgroundImage?: T;
  mobileBackgroundImage?: T;
  rounded?: T;
  width?: T;
  height?: T;
  alignContent?: T;
  contentWidth?: T;
  title?: T;
  description?: T;
  imageGroup?:
    | T
    | {
        image?: T;
        label?: T;
        id?: T;
      };
  verticalPadding?: T;
  verticalGutter?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeedbackBlock_select".
 */
export interface FeedbackBlockSelect<T extends boolean = true> {
  backgroundColor?: T;
  title?: T;
  subText?: T;
  feedBackContent?:
    | T
    | {
        consumerType?: T;
        origin?: T;
        quote?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Rating block_select".
 */
export interface RatingBlockSelect {
  rateCount?: boolean;
  feedback?: boolean;
  source?: boolean;
  link?:
    | boolean
    | {
        type?: boolean;
        newTab?: boolean;
        reference?: boolean;
        url?: boolean;
        label?: boolean;
        appearance?: boolean;
      };
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Video Block_select".
 */
export interface VideoBlockSelect {
  title?: boolean;
  thumbNail?: boolean;
  mobileThumbNail?: boolean;
  sourceFile?: boolean;
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OnlyTextBlock_select".
 */
export interface OnlyTextBlockSelect<T extends boolean = true> {
  width?: T;
  richText?: T;
  enableLink?: T;
  verticalGutter?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock_select".
 */
export interface FAQBlockSelect<T extends boolean = true> {
  faqsContent?:
    | T
    | {
        faqItems?:
          | T
          | {
              question?: T;
              answer?: T;
              category?: T;
              id?: T;
            };
      };
  faqsFilter?:
    | T
    | {
        faqCategories?:
          | T
          | {
              Category?: T;
              displayName?: T;
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EditorBlock_select".
 */
export interface EditorBlockSelect<T extends boolean = true> {
  content?: T;
  enableLink?: T;
  verticalGutter?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Embed Block_select".
 */
export interface EmbedBlockSelect {
  sourceURL?: boolean;
  width?: boolean;
  height?: boolean;
  colorVariant?: boolean;
  enableIntro?: boolean;
  introContent?: boolean;
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageSliderBlock_select".
 */
export interface ImageSliderBlockSelect<T extends boolean = true> {
  sliderImages?:
    | T
    | {
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedBlogBlock_select".
 */
export interface FeaturedBlogBlockSelect<T extends boolean = true> {
  title?: T;
  FeaturedBlogOptions?:
    | T
    | {
        backgroundColor?: T;
        thumbnailOrientation?: T;
        verticalPadding?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogListingBlock_select".
 */
export interface BlogListingBlockSelect<T extends boolean = true> {
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resources_select".
 */
export interface ResourcesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        variant?: T;
        height?: T;
        title?: T;
        description?: T;
        descriptionColor?: T;
        breadcrumbColor?: T;
        media?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
      };
  showLatestArticle?: T;
  latestArticleOptions?:
    | T
    | {
        backgroundColor?: T;
        thumbnailOrientation?: T;
        verticalPadding?: T;
      };
  listingLabel?: T;
  listingByPage?:
    | T
    | {
        resourceCollectionType?: T;
        id?: T;
      };
  listingByCategory?:
    | T
    | {
        Category?: T;
        id?: T;
      };
  showViewAll?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news_select".
 */
export interface NewsSelect<T extends boolean = true> {
  title?: T;
  thumbNail?: T;
  bannerImage?: T;
  breadcrumbColor?: T;
  duration?: T;
  abstract?: T;
  content?: T;
  relatedArticles?:
    | T
    | {
        relatedArticle?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  category?: T;
  author?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos_select".
 */
export interface VideosSelect<T extends boolean = true> {
  title?: T;
  thumbNail?: T;
  duration?: T;
  sourceFile?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reports_select".
 */
export interface ReportsSelect<T extends boolean = true> {
  title?: T;
  thumbNail?: T;
  bannerImage?: T;
  breadcrumbColor?: T;
  duration?: T;
  abstract?: T;
  content?: T;
  relatedArticles?:
    | T
    | {
        relatedArticle?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  category?: T;
  author?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resourcesListing_select".
 */
export interface ResourcesListingSelect<T extends boolean = true> {
  articleId?: T;
  articleCollectionSlug?: T;
  article?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogCategories_select".
 */
export interface BlogCategoriesSelect<T extends boolean = true> {
  title?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  publisher?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  customCSS?: T;
  customScripts?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog_select".
 */
export interface BlogSelect<T extends boolean = true> {
  title?: T;
  thumbNail?: T;
  bannerImage?: T;
  breadcrumbColor?: T;
  duration?: T;
  abstract?: T;
  content?: T;
  relatedArticles?:
    | T
    | {
        relatedArticle?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  category?: T;
  author?: T;
  publisher?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  customCSS?: T;
  customScripts?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              placeholder?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        tel?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        customDatePicker?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              placeholder?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        customConsent?:
          | T
          | {
              name?: T;
              label?: T;
              consentURL?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                  };
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        customMultiCheckboxes?:
          | T
          | {
              name?: T;
              label?: T;
              checkboxes?:
                | T
                | {
                    name?: T;
                    label?: T;
                    id?: T;
                  };
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navLogo: string | Media;
  navItems?:
    | {
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'resources';
                value: string | Resource;
              } | null);
          url?: string | null;
          label?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  link?: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'resources';
          value: string | Resource;
        } | null);
    url?: string | null;
    label?: string | null;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('primary' | 'secondary' | 'primary-ghost' | 'secondary-ghost') | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navLogo: string | Media;
  navGroups?:
    | {
        groupName: string;
        navItems: {
          link?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'resources';
                  value: string | Resource;
                } | null);
            url?: string | null;
            label?: string | null;
          };
          id?: string | null;
        }[];
        id?: string | null;
      }[]
    | null;
  socialMediaPlatforms?:
    | {
        url: string;
        platform: 'facebook' | 'instagram' | 'twitter' | 'linkedin' | 'youtube';
        id?: string | null;
      }[]
    | null;
  form: string | Form;
  misc?: {
    termsAndConditions?: {
      link?: {
        type?: ('reference' | 'custom') | null;
        newTab?: boolean | null;
        reference?:
          | ({
              relationTo: 'pages';
              value: string | Page;
            } | null)
          | ({
              relationTo: 'resources';
              value: string | Resource;
            } | null);
        url?: string | null;
        label?: string | null;
      };
    };
    privacyPolicy?: {
      link?: {
        type?: ('reference' | 'custom') | null;
        newTab?: boolean | null;
        reference?:
          | ({
              relationTo: 'pages';
              value: string | Page;
            } | null)
          | ({
              relationTo: 'resources';
              value: string | Resource;
            } | null);
        url?: string | null;
        label?: string | null;
      };
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogNav".
 */
export interface BlogNav {
  id: string;
  /**
   * Toggle to show/hide the blog navigation menu
   */
  showBlogNav?: boolean | null;
  categories?:
    | {
        category: string | BlogCategory;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalscriptsandcss".
 */
export interface Globalscriptsandcss {
  id: string;
  /**
   * Enter full <style> tag with custom CSS to apply Global level.
   */
  customCSS?: string | null;
  /**
   * Enter <script> tags to be injected into the Global
   */
  customScripts?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navLogo?: T;
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  link?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
        appearance?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navLogo?: T;
  navGroups?:
    | T
    | {
        groupName?: T;
        navItems?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  socialMediaPlatforms?:
    | T
    | {
        url?: T;
        platform?: T;
        id?: T;
      };
  form?: T;
  misc?:
    | T
    | {
        termsAndConditions?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
            };
        privacyPolicy?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogNav_select".
 */
export interface BlogNavSelect<T extends boolean = true> {
  showBlogNav?: T;
  categories?:
    | T
    | {
        category?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalscriptsandcss_select".
 */
export interface GlobalscriptsandcssSelect<T extends boolean = true> {
  customCSS?: T;
  customScripts?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}